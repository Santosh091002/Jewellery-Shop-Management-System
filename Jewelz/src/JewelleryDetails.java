
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import dao.ConnectionProvider;
import java.sql.*;
import javax.swing.table.TableModel;
import java.util.Set;
import java.util.HashSet;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author naiks
 */
public class JewelleryDetails extends javax.swing.JFrame {
    private int customerPk =0;
    private int employeePk = 0;
    private Set<Integer> usedIds = new HashSet<>();
    // Initialize a counter for generating unique IDs
    private int jewelleryIdCounter = 1;
    
    

    /**
     * Creates new form ManagerOrder
     */
    public JewelleryDetails() {
        initComponents();
        setLocationRelativeTo(null);
        populateJewelleryModel();
        
      
    }
    
   
   private void createTriggerPreventNegativePrice() {
    try {
        Connection con = ConnectionProvider.getCon();
        Statement stmt = con.createStatement();
        String checkTriggerQuery = "SHOW TRIGGERS LIKE 'prevent_negative_price'";
        ResultSet triggerResultSet = stmt.executeQuery(checkTriggerQuery);

        if (!triggerResultSet.next()) { // Check if the trigger does not exist
            String triggerQuery = "CREATE TRIGGER prevent_negative_price "
                                + "BEFORE INSERT ON jewellerydetails "
                                + "FOR EACH ROW "
                                + "BEGIN "
                                + "    IF NEW.price < 0 THEN "
                                + "        SIGNAL SQLSTATE '45000' "
                                + "        SET MESSAGE_TEXT = 'Price cannot be negative'; "
                                + "    END IF; "
                                + "END";
            stmt.executeUpdate(triggerQuery);
            con.close();
            JOptionPane.showMessageDialog(null, "Trigger created successfully.");
        }
    } catch (SQLException e) {
      
    }
}






    
    // Other methods in your class...


 
   
        private void populateJewelleryModel() {
        DefaultTableModel jewelleryModel = (DefaultTableModel) tablejewellery.getModel();
        jewelleryModel.setRowCount(0); // Clear existing rows
        
        try {
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM jewellerydetails");
            while (rs.next()) {
                jewelleryModel.addRow(new Object[]{
                    rs.getString("jewellery_pk"),
                    rs.getString("c_name"),
                    rs.getString("c_phone"),
                    rs.getString("v_name"),
                    rs.getString("v_phone"),
                    rs.getString("name"),
                    rs.getString("description"),
                    rs.getString("quantity"),
                    rs.getString("price"),
                    rs.getString("totalprice")
                });
            }
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

 private String generateUniqueJewelleryId() {
        // Generate a unique ID based on the current count
        int jewelleryId;
        do {
            jewelleryId = jewelleryIdCounter++;
        } while (usedIds.contains(jewelleryId)); // Check if the ID has been used before

        // Add the generated ID to the set of used IDs
        usedIds.add(jewelleryId);

        return String.valueOf(jewelleryId);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablecustomer = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablejewellery = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableemployee = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCustomerName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCustomerPhoneNumber = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtEmployeeName = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtEmployeePhoneNumber = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtJName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtJDescription = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtJQuantity = new javax.swing.JTextField();
        txtJPrice = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        btnAddtoList = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        btnSaveDetails = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Impact", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("JEWELLERY DETAILS");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(541, 6, -1, -1));

        tablecustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "PhoneNumber"
            }
        ));
        tablecustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablecustomerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablecustomer);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 109, 264, 279));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Customer List");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(111, 71, -1, -1));

        tablejewellery.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "C_Name", "C_Phone", "E_Name", "E_Phone", "Name", "Description", "Quantity", "Price", "Totalprice"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, true, false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablejewellery);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 454, 910, 275));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Jewellery List");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(423, 414, -1, 22));

        tableemployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "PhoneNumber"
            }
        ));
        tableemployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableemployeeMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tableemployee);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(329, 109, 274, 277));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Employee List");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 70, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Selected Customer");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(649, 109, -1, -1));

        txtCustomerName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        getContentPane().add(txtCustomerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(649, 161, 290, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Name");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(649, 141, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("PhoneNumber");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(649, 195, -1, 23));

        txtCustomerPhoneNumber.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtCustomerPhoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerPhoneNumberActionPerformed(evt);
            }
        });
        getContentPane().add(txtCustomerPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(649, 224, 290, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Selected Jewellery");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(973, 109, -1, -1));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Selected Employee");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(649, 266, -1, -1));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Name");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(649, 292, -1, -1));

        txtEmployeeName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtEmployeeName.setForeground(new java.awt.Color(0, 0, 0));
        txtEmployeeName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmployeeNameActionPerformed(evt);
            }
        });
        getContentPane().add(txtEmployeeName, new org.netbeans.lib.awtextra.AbsoluteConstraints(649, 310, 290, -1));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("PhoneNumber");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(649, 344, -1, -1));

        txtEmployeePhoneNumber.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtEmployeePhoneNumber.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(txtEmployeePhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(649, 366, 290, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Name");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(973, 141, -1, -1));

        txtJName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtJName.setForeground(new java.awt.Color(0, 0, 0));
        txtJName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJNameActionPerformed(evt);
            }
        });
        getContentPane().add(txtJName, new org.netbeans.lib.awtextra.AbsoluteConstraints(973, 161, 345, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Quantity");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(973, 292, -1, -1));

        txtJDescription.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtJDescription.setForeground(new java.awt.Color(0, 0, 0));
        txtJDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJDescriptionActionPerformed(evt);
            }
        });
        getContentPane().add(txtJDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(973, 224, 345, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Description");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(973, 198, -1, -1));

        txtJQuantity.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtJQuantity.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(txtJQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(973, 310, 345, -1));

        txtJPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtJPrice.setForeground(new java.awt.Color(0, 0, 0));
        getContentPane().add(txtJPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(973, 366, 345, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Price");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(973, 344, -1, -1));

        btnAddtoList.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAddtoList.setForeground(new java.awt.Color(0, 0, 0));
        btnAddtoList.setText("Add To List");
        btnAddtoList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddtoListActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddtoList, new org.netbeans.lib.awtextra.AbsoluteConstraints(973, 454, 345, -1));

        btnReset.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnReset.setForeground(new java.awt.Color(0, 0, 0));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        getContentPane().add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(973, 510, 345, -1));

        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(0, 0, 0));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(973, 565, 345, -1));

        btnClose.setBackground(new java.awt.Color(0, 0, 0));
        btnClose.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnClose.setForeground(new java.awt.Color(0, 0, 0));
        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/close.png"))); // NOI18N
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 80, 30, -1));

        btnSaveDetails.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSaveDetails.setForeground(new java.awt.Color(0, 0, 0));
        btnSaveDetails.setText("Save Details");
        btnSaveDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveDetailsActionPerformed(evt);
            }
        });
        getContentPane().add(btnSaveDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 620, 350, -1));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/order Bg.jpg"))); // NOI18N
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        txtCustomerName.setEditable(false);
        txtCustomerPhoneNumber.setEditable(false);
        
        txtEmployeeName.setEditable(false);
        txtEmployeePhoneNumber.setEditable(false);
        
        
        DefaultTableModel employeemodel = (DefaultTableModel) tableemployee.getModel();
        DefaultTableModel model = (DefaultTableModel) tablecustomer.getModel();
        try{
           Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from customer");
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("customer_pk"),rs.getString("name"), rs.getString("phonenumber")}); 
        }
            rs = st.executeQuery("select * from employee");
             while (rs.next()) {
                employeemodel.addRow(new Object[]{rs.getString("employee_pk"),rs.getString("name"), rs.getString("phonenumber")});
            }
        }
        catch(Exception e){
              JOptionPane.showMessageDialog(null, e);
            
        }
        
    }//GEN-LAST:event_formComponentShown

    private void txtCustomerPhoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerPhoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerPhoneNumberActionPerformed

    private void txtEmployeeNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmployeeNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmployeeNameActionPerformed

    private void txtJNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJNameActionPerformed

    private void txtJDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJDescriptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJDescriptionActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int rowIndex = tablejewellery.getSelectedRow();
        if (rowIndex == -1) {
            JOptionPane.showMessageDialog(null, "Please select a record to delete.");
            return;
        }
        String jewelleryId = tablejewellery.getValueAt(rowIndex, 0).toString();
        try {
            Connection con = ConnectionProvider.getCon();
            PreparedStatement ps = con.prepareStatement("DELETE FROM jewellerydetails WHERE jewellery_pk = ?");
            ps.setString(1, jewelleryId);
            int deletedRows = ps.executeUpdate();
            if (deletedRows > 0) {
                JOptionPane.showMessageDialog(null, "Jewellery Details deleted successfully.");
           
                DefaultTableModel model = (DefaultTableModel) tablejewellery.getModel();
                model.removeRow(rowIndex);
            } else {
                JOptionPane.showMessageDialog(null, "Failed to delete employee.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new JewelleryDetails().setVisible(true);
    }//GEN-LAST:event_btnResetActionPerformed

    private void tablecustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablecustomerMouseClicked
        // TODO add your handling code here:
        int index = tablecustomer.getSelectedRow();
        TableModel model = tablecustomer.getModel();
        String id = model.getValueAt(index, 0).toString();
        customerPk =Integer.parseInt(id);
     
        String cname = model.getValueAt(index, 1).toString();
        txtCustomerName.setText(cname);

        String cphoneNumber = model.getValueAt(index, 2).toString();
        txtCustomerPhoneNumber.setText(cphoneNumber);
    }//GEN-LAST:event_tablecustomerMouseClicked

    private void tableemployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableemployeeMouseClicked
        // TODO add your handling code here:
        int index = tableemployee.getSelectedRow();
        TableModel model = tableemployee.getModel();
        String id = model.getValueAt(index, 0).toString();
        employeePk =Integer.parseInt(id);
     
        String Vendorname = model.getValueAt(index, 1).toString();
        txtEmployeeName.setText(Vendorname);

        String VendorPhonenumber = model.getValueAt(index, 2).toString();
        txtEmployeePhoneNumber.setText(VendorPhonenumber);
    }//GEN-LAST:event_tableemployeeMouseClicked

    private void btnAddtoListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddtoListActionPerformed
        // TODO add your handling code here:
   String noofUnits = txtJQuantity.getText();
    if(!noofUnits.equals("")) {
        String name = txtCustomerName.getText();
        String phoneNumber = txtCustomerPhoneNumber.getText();

        String employeename = txtEmployeeName.getText();
        String employeephoneNumber = txtEmployeePhoneNumber.getText();

        String Jname = txtJName.getText();
        String Jdescription = txtJDescription.getText();
        String Jprice = txtJPrice.getText();

        // Check if the price is negative
        

        // Create trigger to prevent negative price
        createTriggerPreventNegativePrice();

        String jewelleryId = generateUniqueJewelleryId();

        int totalPrice = Integer.parseInt(txtJQuantity.getText()) * Integer.parseInt(Jprice);

        boolean jewelleryAlreadyPurchased = false;
        DefaultTableModel jewelleryModel = (DefaultTableModel) tablejewellery.getModel();
        for (int i = 0; i < jewelleryModel.getRowCount(); i++) {
            String jName = (String) jewelleryModel.getValueAt(i, 5); // Assuming jewellery name is at column index 5
            if (Jname.equals(jName)) {
                jewelleryAlreadyPurchased = true;
                break;
            }
        }
        if (jewelleryAlreadyPurchased) {
            JOptionPane.showMessageDialog(this, "Jewellery item already purchased.");
        } else {
            try {
                Connection con = ConnectionProvider.getCon();
                PreparedStatement ps = con.prepareStatement("INSERT INTO jewellerydetails (jewellery_pk, c_name, c_phone, v_name, v_phone, name, description, quantity, price, totalprice) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

                // Set the values for the insert statement
                ps.setString(1, jewelleryId);
                ps.setString(2, name);
                ps.setString(3, phoneNumber);
                ps.setString(4, employeename);
                ps.setString(5, employeephoneNumber);
                ps.setString(6, Jname);
                ps.setString(7, Jdescription);
                ps.setString(8, noofUnits);
                ps.setString(9, Jprice);
                ps.setString(10, String.valueOf(totalPrice));

                // Execute the insert statement
                ps.executeUpdate();

                // Close the connection
                con.close();

                // Add the new row to the table model
                jewelleryModel.addRow(new Object[]{jewelleryId, name, phoneNumber, employeename, employeephoneNumber, Jname, Jdescription, noofUnits, Jprice, totalPrice});

                // Clear the text fields
                clearTextFields();

                JOptionPane.showMessageDialog(null, "Jewellery item added successfully.");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error adding jewellery item: " + e.getMessage());
            }
        }
    } else {
        JOptionPane.showMessageDialog(null, "No of Quantity and product field is required");
    }
        
    }//GEN-LAST:event_btnAddtoListActionPerformed

     
      
    private void btnSaveDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveDetailsActionPerformed
        // TODO add your handling code here:
     DefaultTableModel jewelleryModel = (DefaultTableModel) tablejewellery.getModel();
              
          
      
       try {
        Connection con = ConnectionProvider.getCon();
        PreparedStatement ps = con.prepareStatement("INSERT INTO jewellerydetails (jewellery_pk, c_name, c_phone, v_name, v_phone, name, description, quantity, price, totalprice) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

        for (int i = 0; i < jewelleryModel.getRowCount(); i++) {
          
            String jewelleryId = jewelleryModel.getValueAt(i, 0).toString();
            ps.setString(1, jewelleryId);
            ps.setString(2, jewelleryModel.getValueAt(i, 1).toString());
            ps.setString(3, jewelleryModel.getValueAt(i, 2).toString());
            ps.setString(4, jewelleryModel.getValueAt(i, 3).toString());
            ps.setString(5, jewelleryModel.getValueAt(i, 4).toString());
            ps.setString(6, jewelleryModel.getValueAt(i, 5).toString());
            ps.setString(7, jewelleryModel.getValueAt(i, 6).toString());
            ps.setString(8, jewelleryModel.getValueAt(i, 7).toString());
            ps.setString(9, jewelleryModel.getValueAt(i, 8).toString());
            ps.setString(10, jewelleryModel.getValueAt(i, 9).toString());

            ps.executeUpdate();
            }
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Jewellery Details Added Successfully");
        }
        
    }//GEN-LAST:event_btnSaveDetailsActionPerformed
     
  
        private void clearTextFields() {
         txtCustomerName.setText("");
         txtCustomerPhoneNumber.setText("");
         txtEmployeeName.setText("");
         txtEmployeePhoneNumber.setText("");
         txtJName.setText("");
         txtJDescription.setText("");
         txtJQuantity.setText("");
         txtJPrice.setText("");
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JewelleryDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JewelleryDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JewelleryDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JewelleryDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JewelleryDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddtoList;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSaveDetails;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tablecustomer;
    private javax.swing.JTable tableemployee;
    private javax.swing.JTable tablejewellery;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtCustomerPhoneNumber;
    private javax.swing.JTextField txtEmployeeName;
    private javax.swing.JTextField txtEmployeePhoneNumber;
    private javax.swing.JTextField txtJDescription;
    private javax.swing.JTextField txtJName;
    private javax.swing.JTextField txtJPrice;
    private javax.swing.JTextField txtJQuantity;
    // End of variables declaration//GEN-END:variables
}
